{
  "stats": {
    "suites": 5,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2018-12-11T08:58:34.851Z",
    "end": "2018-12-11T08:58:36.153Z",
    "duration": 1302,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "c51c999b-34be-4ec9-8f74-73aa0998cdf7",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "96d6b187-553f-4765-b2e9-33231beb550f",
        "title": "UIController tests",
        "fullFile": "/mnt/c/Users/borbalher/Documents/GitHub/handlebars-component-composer/src/ui-controller/ui-controller.test.js",
        "file": "/src/ui-controller/ui-controller.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "UIController tests \"before all\" hook",
            "timedOut": false,
            "duration": 1197,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "// We activate DOM\nthis.jsdom = require('jsdom-global')()\n// Precompile unordered-list template\nconst\nHandlebars          = require('handlebars'),\nprecompiledTemplate = Handlebars.compile('<ul>{{#each items}}<li>{{this}}</li>{{/each}}</ul>')\n\n// Add handlebars runtime and precompiled template to component-composer.views\nwindow.Handlebars = require('handlebars/runtime')\nwindow['component-composer'] =\n{\n  'views' :\n  {\n    'unordered-list' : precompiledTemplate\n  }\n}\n// Compile the template using the component helper\nconst\ncomponentHelper   = require('../handlebars/component'),\ncompiledComponent = componentHelper('unordered-list', { items: [1, 2, 3] }, 'myList')\n// Create a div with the compiled component view and append it to body\nconst div = document.createElement('div')\ndiv.innerHTML = compiledComponent\ndocument.body.appendChild(div)",
            "err": {},
            "isRoot": false,
            "uuid": "6b2ac64b-596f-41ee-b3d9-283d936656ae",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "UIController tests \"after all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "this.jsdom()",
            "err": {},
            "isRoot": false,
            "uuid": "a33285e2-2d03-4585-b26f-9ea718e0616d",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [],
        "suites": [
          {
            "uuid": "fe141a47-c427-4795-8dd3-3051f4670011",
            "title": "UIController class tests",
            "fullFile": "/mnt/c/Users/borbalher/Documents/GitHub/handlebars-component-composer/src/ui-controller/ui-controller.test.js",
            "file": "/src/ui-controller/ui-controller.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return UIController",
                "fullTitle": "UIController tests UIController class tests should return UIController",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\nunorderedListFactory = new UnorderedListFactory(),\ncontroller           = new UIController('#myList', 'unordered-list', unorderedListFactory)\nexpect(controller).to.be.instanceOf(UIController)\nexpect(document.getElementById('myList').innerHTML).equal('<ul><li>1</li><li>2</li><li>3</li></ul>')",
                "err": {},
                "isRoot": false,
                "uuid": "71c4b432-8bf5-4f7f-9786-31959df78a2c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should change the vm",
                "fullTitle": "UIController tests UIController class tests should change the vm",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\nunorderedListFactory = new UnorderedListFactory(),\ncontroller = new UIController('#myList', 'unordered-list', unorderedListFactory)\ncontroller.setViewModel([3, 4, 5])\nexpect(controller.vm).to.deep.equal({ 'items': [3, 4, 5] })",
                "err": {},
                "isRoot": false,
                "uuid": "ab950d81-50b3-4071-81cb-1b995d12254b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should get a copy of the vm",
                "fullTitle": "UIController tests UIController class tests should get a copy of the vm",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\nunorderedListFactory = new UnorderedListFactory(),\ncontroller = new UIController('#myList', 'unordered-list', unorderedListFactory),\nvm = controller.getViewModel()\nexpect(controller.vm).to.deep.equal(vm)",
                "err": {},
                "isRoot": false,
                "uuid": "00a9bf6d-a200-450b-acdb-9c9b3cec457b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should render the template",
                "fullTitle": "UIController tests UIController class tests should render the template",
                "timedOut": false,
                "duration": 10,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\nunorderedListFactory = new UnorderedListFactory(),\ncontroller = new UIController('#myList', 'unordered-list', unorderedListFactory)\ncontroller.setViewModel([3, 4, 5])\ncontroller.render()\nconst view = document.getElementById('myList').innerHTML\nexpect(view).equal('<ul><li>3</li><li>4</li><li>5</li></ul>')",
                "err": {},
                "isRoot": false,
                "uuid": "992911d5-019f-427d-91f0-8972f729119d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should change, render the template and apply bindings",
                "fullTitle": "UIController tests UIController class tests should change, render the template and apply bindings",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\nunorderedListFactory = new UnorderedListFactory(),\ncontroller = new UIController('#myList', 'unordered-list', unorderedListFactory)\ncontroller.apply([3, 4, 5])\nconst view = document.getElementById('myList').innerHTML\nexpect(view).equal('<ul><li>3</li><li>4</li><li>5</li></ul>')",
                "err": {},
                "isRoot": false,
                "uuid": "bb0c67dd-f980-4807-bd91-c17a25df28cc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should get the ul node",
                "fullTitle": "UIController tests UIController class tests should get the ul node",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\nunorderedListFactory = new UnorderedListFactory(),\ncontroller = new UIController('#myList', 'unordered-list', unorderedListFactory),\nulNode     = controller.getComponentNode('ul')\nexpect(ulNode.nodeName).equal('UL')",
                "err": {},
                "isRoot": false,
                "uuid": "005b8e37-9626-459d-9659-0ca2d07131ee",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should get the li nodes",
                "fullTitle": "UIController tests UIController class tests should get the li nodes",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\nunorderedListFactory = new UnorderedListFactory(),\ncontroller = new UIController('#myList', 'unordered-list', unorderedListFactory)\ncontroller.setViewModel([3, 4, 5])\ncontroller.render()\nconst liNodes = controller.getComponentNodes('li')\nexpect(liNodes.length).equal(3)",
                "err": {},
                "isRoot": false,
                "uuid": "08c24249-1d21-4d1f-951a-6deb8875408c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "71c4b432-8bf5-4f7f-9786-31959df78a2c",
              "ab950d81-50b3-4071-81cb-1b995d12254b",
              "00a9bf6d-a200-450b-acdb-9c9b3cec457b",
              "992911d5-019f-427d-91f0-8972f729119d",
              "bb0c67dd-f980-4807-bd91-c17a25df28cc",
              "005b8e37-9626-459d-9659-0ca2d07131ee",
              "08c24249-1d21-4d1f-951a-6deb8875408c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 33,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "63489504-443e-440a-aff1-268a8fcfed47",
            "title": "UIController injector tests",
            "fullFile": "/mnt/c/Users/borbalher/Documents/GitHub/handlebars-component-composer/src/ui-controller/ui-controller.test.js",
            "file": "/src/ui-controller/ui-controller.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return UIControllerInjector",
                "fullTitle": "UIController tests UIController injector tests should return UIControllerInjector",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\ncontrollersFactory   = new ControllersFactory(),\ninjector = new UIControllerInjector(controllersFactory)\nexpect(injector).to.be.instanceOf(UIControllerInjector)",
                "err": {},
                "isRoot": false,
                "uuid": "c2f2917d-ed6e-4862-afe8-8de4eff17d69",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should inject UnorderedListController",
                "fullTitle": "UIController tests UIController injector tests should inject UnorderedListController",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\ncontrollersFactory  = new ControllersFactory(),\ninjector            = new UIControllerInjector(controllersFactory)\ninjector.inject()\nexpect(window.controllers['myList']).to.be.instanceOf(UIController)",
                "err": {},
                "isRoot": false,
                "uuid": "90ac448a-fd54-45cf-8f04-104cb18e3bb5",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should throw CONTROLLER_FUNCTION_NOT_EXIST error ",
                "fullTitle": "UIController tests UIController injector tests should throw CONTROLLER_FUNCTION_NOT_EXIST error ",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const\ncontrollersFactory  = new ControllersFactory(),\ninjector            = new UIControllerInjector(controllersFactory),\ndiv                 = document.createElement('div')\n// We add a component div with id that has no controller function\ndiv.id = 'inject-error'\ndiv.classList.add('component-wrapper')\ndiv.setAttribute('data-component', 'component-inexistent')\ndocument.body.append(div)\nexpect(() =>\n{\n  injector.inject()\n}).to.throw(/Controller 'component-inexistent' does not have a function/)",
                "err": {},
                "isRoot": false,
                "uuid": "ecf5d832-825f-49f2-a102-2c36f00c38b5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c2f2917d-ed6e-4862-afe8-8de4eff17d69",
              "90ac448a-fd54-45cf-8f04-104cb18e3bb5",
              "ecf5d832-825f-49f2-a102-2c36f00c38b5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 10,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1fa23cb0-0157-4927-bc47-82685226a504",
        "title": "Handlebars Component client helper tests",
        "fullFile": "/mnt/c/Users/borbalher/Documents/GitHub/handlebars-component-composer/src/handlebars/component/component.test.js",
        "file": "/src/handlebars/component/component.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a safeString with an H1 title containing Hello world!",
            "fullTitle": "Handlebars Component client helper tests should return a safeString with an H1 title containing Hello world!",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nHandlebars          = require('handlebars'),\nprecompiledTemplate = Handlebars.compile('<h1>Hello {{name}}!</h1>')\nglobal.Handlebars = require('handlebars/runtime')\nglobal.window =\n{\n  'component-composer' :\n  {\n    'views' : {}\n  }\n}\nglobal.window['component-composer'].views['hello-name'] = precompiledTemplate\nconst\nhelper      = require('.'),\nsafeString  = helper('hello-name', { name: 'world' })\nassert(\n  safeString instanceof global.Handlebars.SafeString === true &&\n  safeString.string === '<div data-component=\"hello-name\" class=\"component-wrapper\"><h1>Hello world!</h1></div>'\n)",
            "err": {},
            "isRoot": false,
            "uuid": "8aa66b3c-d85b-4d54-9dbb-b216047d6a82",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a safeString with an H1 title containing Hello world! and the id \"helloNameComponent\"",
            "fullTitle": "Handlebars Component client helper tests should return a safeString with an H1 title containing Hello world! and the id \"helloNameComponent\"",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nHandlebars          = require('handlebars'),\nprecompiledTemplate = Handlebars.compile('<h1>Hello {{name}}!</h1>')\nglobal.Handlebars = require('handlebars/runtime')\nglobal.window =\n{\n  'component-composer' :\n  {\n    'views' : {}\n  }\n}\nglobal.window['component-composer'].views['hello-name'] = precompiledTemplate\nconst\nhelper      = require('.'),\nsafeString  = helper('hello-name', { name: 'world' }, 'helloNameComponent')\nassert(\n  safeString instanceof global.Handlebars.SafeString === true &&\n  safeString.string === '<div id=\"helloNameComponent\" data-component=\"hello-name\" class=\"component-wrapper\"><h1>Hello world!</h1></div>'\n)",
            "err": {},
            "isRoot": false,
            "uuid": "65766ca9-41e7-4c54-b757-026c10905adc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should throws NoPrecompiledViewError when component view file does not exists",
            "fullTitle": "Handlebars Component client helper tests should throws NoPrecompiledViewError when component view file does not exists",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(() =>\n{\n  const helper = require('.')\n  helper('this-component-does-not-exists', {  })\n}).to.throw(/View 'this-component-does-not-exists' does not exists, it's not precompiled/)",
            "err": {},
            "isRoot": false,
            "uuid": "4ba825aa-4976-4fa1-9f43-c85a0314cd86",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8aa66b3c-d85b-4d54-9dbb-b216047d6a82",
          "65766ca9-41e7-4c54-b757-026c10905adc",
          "4ba825aa-4976-4fa1-9f43-c85a0314cd86"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "be2b75ab-9299-4fac-a8e8-640276447ce4",
        "title": "Handlebars JSON stringify helper tests",
        "fullFile": "/mnt/c/Users/borbalher/Documents/GitHub/handlebars-component-composer/src/handlebars/json-stringify/json-stringify.test.js",
        "file": "/src/handlebars/json-stringify/json-stringify.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with the given JSON object",
            "fullTitle": "Handlebars JSON stringify helper tests should return a string with the given JSON object",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nhandlebarsJSONhelper = require('.'),\nstr                  = handlebarsJSONhelper({ hello: 'world' })\nassert(\n  typeof str === 'string' &&\n  str === '{\"hello\":\"world\"}'\n)",
            "err": {},
            "isRoot": false,
            "uuid": "32f1c272-12f4-4016-9a7d-3836d49a7515",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "32f1c272-12f4-4016-9a7d-3836d49a7515"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}